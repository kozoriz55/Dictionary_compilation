# –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –ø–æ—à—É–∫ —Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü—ñ—è –≤—ñ–π—Å—å–∫–æ–≤–æ—ó –ª–µ–∫—Å–∏–∫–∏ –∫–∏—Ç–∞–π—Å—å–∫–æ—ó –º–æ–≤–∏ –Ω–∞ –æ—Å–Ω–æ–≤—ñ –∫–æ—Ä–ø—É—Å—É
import pandas as pd
import re
import matplotlib.pyplot as plt
# –∫–æ—Ä–ø—É—Å
with open("mil_corpus.txt", 'rt', encoding='utf-8') as f1:
	full_text = f1.read()
# –®–∞–±–ª–æ–Ω–∏ –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤
templates = {
# –ö–ª–∞—Å–∏—Ñ—ñ–∫–∞—Ü—ñ—è –∑–∞ —Ç–∏–ø–æ–º –∑–±—Ä–æ—ó, —Ç–µ—Ö–Ω—ñ–∫–∏ —Ç–∞ —Å–∏—Å—Ç–µ–º:
"Á≥ªÁªüÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,6}(Á≥ªÁªü|Âπ≥Âè∞|ËÆæÊñΩ))',
"ÂØºÂºπÁ±ªÊúØËØ≠": r'((Á©∫|Âú∞|Êµ∑)?ÂØπ(Á©∫|Âú∞|Êµ∑)?(ÂØºÂºπ|Á≥ªÁªü|Âπ≥Âè∞|ÂèëÂ∞ÑÂô®|Èõ∑Ëææ|ÂØºÂºï))',
"ÊàòÊúØÊ≠¶Âô®": r'([\u4e00-\u9fa5]{2,7}(ÊàòËΩ¶|Âù¶ÂÖã|Ë£ÖÁî≤ËΩ¶|Ëá™Ë°åÁÇÆ|Ê≠•ÂÖµÊàòËΩ¶|ÂèçÂù¶ÂÖãÂØºÂºπ|ÂØºÂºπ|Ê≠¶Âô®|È£ûÂºπ|ÂºπËçØ))',
"È£ûÊú∫Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ËΩ∞ÁÇ∏Êú∫|ÊàòÊñóÊú∫|ËøêËæìÊú∫|Âä†Ê≤πÊú∫|‰æ¶ÂØüÊú∫|Êó†‰∫∫Êú∫))',
"Ëà∞ËàπÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÊàòËà∞|È©±ÈÄêËà∞|ÊΩúËâá|Ëà™ÊØç|Êä§Âç´Ëà∞|Â∑°Ê¥ãËà∞|ÊΩúËà∞|Ëà∞Ëâá|Ëà™Ëà∞|È©±ÈÄêËà∞|ÁôªÈôÜËà∞|ËøêËæìËà∞|ÂÜõËà∞))',
"ÁÅ´ÁÇÆÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÁÅ´ÁÇÆ|Âä†ÂÜúÁÇÆ|Ëá™Ëµ∞ÁÇÆ|ÂèçËà∞ÂØºÂºπ|ÁÅ´ÁÆ≠ÁÇÆ|Â§öÁÆ°ÁÅ´ÁÆ≠|ËøêËΩΩÁÅ´ÁÆ≠|ÁÅ´ÁÆ≠))',
"Èò≤Á©∫Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(Èò≤Á©∫|ÂØºÂºπÈò≤Âæ°|Èò≤Á©∫ÂØºÂºπ|Èò≤Á©∫Á≥ªÁªü|Èõ∑Ëææ|SAM))',
"Èõ∑ËææÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(Èõ∑Ëææ|Ë∑üË∏™|Êé¢Êµã|ÂèçËæêÂ∞Ñ|Èò≤Á©∫Èõ∑Ëææ|Ê∞îË±°Èõ∑Ëææ))',
"ÊåáÊå•‰∏≠ÂøÉÁ±ªÊúØËØ≠": r'[^\d]([\u4e00-\u9fa5]{2,6}(ÊåáÊå•‰∏≠ÂøÉ|‰ΩúÊàòÊåáÊå•|ÊàòÊúØÊåáÊå•|ÊàòÁï•ÊåáÊå•|ÊåáÊå•ÊâÄ|ÊåáÊå•|Âçï‰Ωç|‰∏≠ÂøÉ|Âü∫Âú∞|Âè∏‰ª§ÈÉ®|ÂßîÂëò‰ºö|Êú∫ÊûÑ|ÁªÑÁªá|ÁÆ°Âà∂))',
"Áõ¥ÂçáÊú∫Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(Áõ¥ÂçáÊú∫|Ê≠¶Ë£ÖÁõ¥ÂçáÊú∫|ÊîªÂáªÁõ¥ÂçáÊú∫|ËøêËæìÁõ¥ÂçáÊú∫))',
"ÈÉ®ÈòüÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,5}(ÈÉ®Èòü|Ê≠•ÂÖµ|Ë£ÖÁî≤ÂÖµ|ÁÇÆÂÖµ|ÁâπÁßçÂÖµ|Á©∫ÈôçÂÖµ|Êµ∑ÂÜõÈôÜÊàòÈòü|Èò≤Á©∫ÂÖµ|ÊàòÁï•ÊîØÊè¥ÈÉ®Èòü))',
"ÂÜõ‰∫ã‰∫∫Âëò": r'([\u4e00-\u9fa5]{2,}(‰∫∫Âëò|ÂÜõÂÆò|ÊåáÊå•ÂÆò|ÂÖµÂäõ|ÂèÇË∞ã|Â£´ÂÆò|‰∏äÂ£´|‰∏≠Â£´|‰∏ãÂ£´|Â£´ÂÖµ))',
# –®–∞–±–ª–æ–Ω–∏ –¥–ª—è –≤–∏—è–≤–ª–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤, –ø–æ–≤‚Äô—è–∑–∞–Ω–∏—Ö –∑ –≤—ñ–π—Å—å–∫–æ–≤–æ—é —Å—Ç—Ä–∞—Ç–µ–≥—ñ—î—é, –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏:
"ÊàòÁï•Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÊàòÁï•|ÊàòÊúØ|ÂèçÂ∫î|ÊîªÂäø|Èò≤Âæ°|ÈÉ®ÁΩ≤|‰ΩúÊàòËÆ°Âàí|ÊàòÁï•ÁõÆÊ†á|ÊâìÂáªËÉΩÂäõ))',
"‰ΩúÊàòÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,5}(ÊàòÂΩπ|‰ΩúÊàò|ÊàòÊñó|ÂèçÊÅê|ÂèçÊ∏óÈÄè|Èò≤Âæ°‰ΩúÊàò|ËøõÊîª‰ΩúÊàò|Âõ¥Ê≠º|Á™ÅÂáª|ÂÜ≤Âáª|ÊâìÂáª|ÊîªÂáª|Â∞ÑÂáª|ËΩ∞ÁÇ∏|Ë¢≠Âáª|Á™ÅË¢≠|Ë¢≠Êâ∞|Á©∫Ë¢≠|ËøõÊîª|Ê≠ºÂáª))',
"ÁâπÁßçÂÖµÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÁâπÁßçÂÖµ|ÁâπÁßç‰ΩúÊàò|ÂèçÊÅêÈÉ®Èòü|ÁâπÊàòÈòü|‰æ¶ÂØüÈòü|ÊΩú‰ºè‰ªªÂä°|ÂüéÂ∏ÇÊàò))',
"ÊàòÊúØÂ∑•ÂÖ∑Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÊàòÊúØ|Êú∫Âä®|ÈöêËîΩ|ÊàòÊñóÂ∞èÁªÑ|ÁîµÂ≠êÊàò|ËøúÁ®ãÊâìÂáª|Á≤æÁ°ÆÊâìÂáª|ÊÉÖÊä•|‰æ¶ÂØü|ÁõëËßÜ|ÊêúÁ¥¢))',
"ËÅîÂêà‰ΩúÊàòÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ËÅîÂêàÊàòÂΩπ|ËÅîÂêàÊåáÊå•|Á©∫Âú∞‰∏Ä‰Ωì|Êµ∑Á©∫ËÅîÂêà|Â§öÁª¥‰ΩúÊàò|ËÅîÂêà‰ΩúÊàòËÆ°Âàí|ËÆ≠ÁªÉ|ÊàòÂ§á|Êºî‰π†))',
# –®–∞–±–ª–æ–Ω–∏ –¥–ª—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –∑ –≤—ñ–π—Å—å–∫–æ–≤–∏–º–∏ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º–∏ –∞—Å–ø–µ–∫—Ç–∞–º–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –º–∞—Ç–µ—Ä—ñ–∞–ª–∏, —Ç–µ—Ö–Ω–æ–ª–æ–≥—ñ—ó):
"‰∫∫Â∑•Êô∫ËÉΩÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(‰∫∫Â∑•Êô∫ËÉΩ|Êú∫Âô®Â≠¶‰π†|Ê∑±Â∫¶Â≠¶‰π†|Â§ßÊï∞ÊçÆ|Êó†‰∫∫Á≥ªÁªü|Êô∫ËÉΩÊ≠¶Âô®))',
"ÊäÄÊúØÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(È´òË∂ÖÈü≥ÈÄü|ÈöêÂΩ¢ÊäÄÊúØ|ÊøÄÂÖâÊ≠¶Âô®|ÁîµÁ£ÅÁÇÆ|ÈáèÂ≠êÈÄö‰ø°|ÁΩëÁªúÊàò|ÁîµÂ≠êÊàò))',
"ÂÜõ‰∫ãÁßëÊäÄÁ±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÂÜõ‰∫ãÊäÄÊúØ|Ê≠¶Âô®Á†îÂèë|ÂÖàËøõÊäÄÊúØ|ÂÜõ‰∫ãÁßëÁ†î|ÂõΩÈò≤ÁßëÊäÄ|ÂÜõÂ∑•‰ºÅ‰∏ö))',
# –®–∞–±–ª–æ–Ω–∏ –¥–ª—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤, —â–æ —Å—Ç–æ—Å—É—é—Ç—å—Å—è –≤—ñ–π—Å—å–∫–æ–≤–∏—Ö –æ–±'—î–∫—Ç—ñ–≤ (—Ç–∏–ø–∏ –±–∞–∑, —Å–ø–æ—Ä—É–¥):
"ÂÜõ‰∫ãÂü∫Âú∞Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÂÜõ‰∫ãÂü∫Âú∞|ÊàòÊúØÂü∫Âú∞|Èò≤Á©∫Âü∫Âú∞|ÊåáÊå•‰∏≠ÂøÉ|ÂºπËçØÂ∫ì|ÂÜõËà∞ÂÅúÊ≥äÊ∏Ø))',
"ÊàòÂú∫Á±ªÊúØËØ≠": r'([\u4e00-\u9fa5]{2,4}(ÂâçÁ∫ø|ÊàòÂú∫|ÈòµÂú∞|ÊåáÊå•ÊâÄ|ÁÇÆÂÖµÈòµÂú∞|Á©∫‰∏≠ÊâìÂáªÁÇπ|Èò≤Á∫ø))'
}
# –í–∏—è–≤–ª–µ–Ω–Ω—è —Ç–µ—Ä–º—ñ–Ω—ñ–≤
print("–í–∏—Ç—è–≥ —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –∑–∞ —à–∞–±–ª–æ–Ω–∞–º–∏...")
found_terms = []
found_terms2 = []
seen_terms = set()

for label, pattern in templates.items():
    matches = re.findall(pattern, full_text)
    for match in matches:
        found_terms.append((match[0], label))
        if match[0] not in seen_terms:
            found_terms2.append((match[0], label))
            seen_terms.add(match[0])

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —É DataFrame
df = pd.DataFrame(found_terms, columns=["–¢–µ—Ä–º—ñ–Ω", "–®–∞–±–ª–æ–Ω"])
df2 = pd.DataFrame(found_terms2, columns=["–¢–µ—Ä–º—ñ–Ω", "–®–∞–±–ª–æ–Ω"])
# –ì—Ä—É–ø—É–≤–∞–Ω–Ω—è
stats = df["–®–∞–±–ª–æ–Ω"].value_counts()
print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —à–∞–±–ª–æ–Ω—ñ–≤: \n", stats)
# –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞
plt.rcParams['font.sans-serif'] = ['SimHei']  # –¥–ª—è –∫–∏—Ç–∞–π—Å—å–∫–∏—Ö —ñ—î—Ä–æ–≥–ª—ñ—Ñ—ñ–≤
plt.figure(figsize=(8, 5))
stats.plot(kind='bar', color='skyblue')
plt.title("Term Distribution by Template")
plt.xlabel("Template Type")
plt.ylabel("Quantity")
plt.tight_layout()
plt.grid(axis='y', linestyle='--', alpha=0.5)
plt.savefig("C:\\Users\\davin\\Desktop\\–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_—à–∞–±–ª–æ–Ω—ñ–≤.png", dpi=300, bbox_inches='tight')
print("üñºÔ∏è –ì—Ä–∞—Ñ—ñ–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫ '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞_—à–∞–±–ª–æ–Ω—ñ–≤.png'")
plt.show()
# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–∞ –¥–∏—Å–∫
#df2.to_csv("C:\\Users\\davin\\Desktop\\–≤—ñ–π—Å—å–∫–æ–≤—ñ_—Ç–µ—Ä–º—ñ–Ω–∏_–∑_–Ω–æ–≤–∏–Ω.csv", index=False, encoding='utf-8')
#print("üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ '–≤—ñ–π—Å—å–∫–æ–≤—ñ_—Ç–µ—Ä–º—ñ–Ω–∏_–∑_–Ω–æ–≤–∏–Ω.csv'")

# üî¢ –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —á–∞—Å—Ç–æ—Ç–∏ —Ç–µ—Ä–º—ñ–Ω—ñ–≤
term_counts = df["–¢–µ—Ä–º—ñ–Ω"].value_counts()
# üìå –í–∏–±—ñ—Ä —Ç–µ—Ä–º—ñ–Ω—ñ–≤, —è–∫—ñ –∑—É—Å—Ç—Ä—ñ—á–∞—é—Ç—å—Å—è –±—ñ–ª—å—à–µ 3 —Ä–∞–∑—ñ–≤
frequent_terms = term_counts[term_counts > 4]
# üìã –û–±'—î–¥–Ω—É—î–º–æ —á–∞—Å—Ç—ñ —Ç–µ—Ä–º—ñ–Ω–∏ –∑ –ª–µ–π–±–ª–∞–º–∏ –∑ df2
df2_filtered = df2[df2["–¢–µ—Ä–º—ñ–Ω"].isin(frequent_terms.index)].copy()
# ‚ûï –î–æ–¥–∞—î–º–æ –∫–æ–ª–æ–Ω–∫—É "–ö—ñ–ª—å–∫—ñ—Å—Ç—å"
df2_filtered["–ö—ñ–ª—å–∫—ñ—Å—Ç—å"] = df2_filtered["–¢–µ—Ä–º—ñ–Ω"].map(frequent_terms)
# üîΩ –°–æ—Ä—Ç—É—î–º–æ –∑–∞ —Å–ø–∞–¥–∞–Ω–Ω—è–º
df2_filtered.sort_values(by="–ö—ñ–ª—å–∫—ñ—Å—Ç—å", ascending=False, inplace=True)
df2_filtered.to_csv("C:\\Users\\davin\\Desktop\\–≤—ñ–π—Å—å–∫–æ–≤—ñ_—Ç–µ—Ä–º—ñ–Ω–∏_—á–∞—Å—Ç–æ—Ç–Ω—ñ.csv", index=False, encoding='utf-8')
print("üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–æ '–≤—ñ–π—Å—å–∫–æ–≤—ñ_—á–∞—Å—Ç–æ—Ç–Ω—ñ_—Ç–µ—Ä–º—ñ–Ω–∏.csv'")
# üìä –ü–æ–±—É–¥–æ–≤–∞ –≥—Ä–∞—Ñ—ñ–∫–∞ —á–∞—Å—Ç–æ—Ç–Ω–∏—Ö —Ç–µ—Ä–º—ñ–Ω—ñ–≤
plt.figure(figsize=(10, 6))
df2_filtered = df2_filtered.head(25)#–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–µ—Ä–º—ñ–Ω—ñ–≤ –Ω–∞ –≥—Ä–∞—Ñ—ñ–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —Ç–æ–ø-25)
plt.barh(df2_filtered["–¢–µ—Ä–º—ñ–Ω"], df2_filtered["–ö—ñ–ª—å–∫—ñ—Å—Ç—å"], color='orange')
plt.xlabel("Number of occurrences of terms")
plt.ylabel("Term")
plt.title("Most frequent military terms in the corpus")
plt.gca().invert_yaxis()  # –©–æ–± –Ω–∞–π—á–∞—Å—Ç—ñ—à—ñ –±—É–ª–∏ –≤–≥–æ—Ä—ñ
plt.grid(axis='x', linestyle='--', alpha=0.5)
# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —à—Ä–∏—Ñ—Ç—É –¥–ª—è –∫–∏—Ç–∞–π—Å—å–∫–∏—Ö —ñ—î—Ä–æ–≥–ª—ñ—Ñ—ñ–≤
plt.rcParams['font.sans-serif'] = ['SimHei']
plt.tight_layout()
plt.savefig("C:\\Users\\davin\\Desktop\\–≤—ñ–π—Å—å–∫–æ–≤—ñ_—Ç–µ—Ä–º—ñ–Ω–∏_—á–∞—Å—Ç–æ—Ç–Ω—ñ.png", dpi=300, bbox_inches='tight')
print("üñºÔ∏è –ì—Ä–∞—Ñ—ñ–∫ –∑–±–µ—Ä–µ–∂–µ–Ω–æ —è–∫ '–≤—ñ–π—Å—å–∫–æ–≤—ñ_—Ç–µ—Ä–º—ñ–Ω–∏_—á–∞—Å—Ç–æ—Ç–Ω—ñ.png'")
plt.show()
